@using MoviesRatings.Data
@page "/actor"
@inject IActorService ActorService
@inject IJSRuntime JSRuntime
 

<h3>ActorPage</h3>
@if(actors == null)
{
    <p>loading</p>
}
else
{
    <table>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Gender</th>
        </tr>
        @foreach(var actor in actors)
        {
            <tr>
                <td>@actor.FirstName</td>
                <td>@actor.LastName</td>
                <td>@actor.Gender</td>
            </tr>
        }
    </table>
}

<button id="btnAddActor" @onclick="e=> IsModalOpened = true">Add Actor</button>
<dialog @ref="_element"> My modal</dialog>

<Modal @bind-Open="IsModalOpened" Close="OnClose">
    <form method="dialog">
        <h2>Add Actor</h2>
        <label for="firstName">First Name</label>
        <input type="text" id="firstName" />
        <br />
        <label for"lastName>Last Name</label>
        <input type="text" id="lastName" />
        <br />
        <label for="gender">Gender</label>
        <select id="gender">
            <option value="Male">Male</option>
            <option value="Female">Female</option>
        </select>
        <br />
        <input type="submit" value="Submit" />
        <input type="button" value="Cancel" />
    </form>
</Modal>

@code {
    List<Actor> actors;
    private ElementReference _element;
    public bool IsModalOpened { get; set; }
    public string SelectedButton { get; set; }

    protected override async Task OnInitializedAsync()
    {
        actors = await ActorService.GetActors();
    }

    private async Task OpenModal()
    {
        //calling the js function for the JsLibrary
        await JSRuntime.InvokeVoidAsync("showModal", _element);
    }

    public async Task InitializeModal()
    {
        var reference = DotNetObjectReference.Create(this);

        await JSRuntime.InvokeVoidAsync("initializeModal", _element, reference);
    }

    [JSInvokable]
    public void OnClose(string returnVal)
    {
        SelectedButton = returnVal;
    }
}
